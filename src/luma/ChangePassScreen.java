/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package luma;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author musoftware
 */
public class ChangePassScreen extends javax.swing.JFrame {

    /**
     * Creates new form ChangePass
     */
    private String userOldPass;
    public ChangePassScreen() {
        initComponents();
    }
    private Profile profile;
    void setProfile(Profile profile) throws SQLException{
        this.profile = profile;
        userOldPass = DatabaseOperations.getUserPass(profile.getUsername());
    }
    boolean isDark = false;
     void setApperance(){
        if(isDark){
         main.setBackground(Color.GRAY);
         oldPass.setBackground(Color.LIGHT_GRAY);
         newPass.setBackground(Color.LIGHT_GRAY);
         newPassA.setBackground(Color.LIGHT_GRAY);
         
        }
        else{
         main.setBackground(Color.WHITE);
         oldPass.setBackground((Color.WHITE));
         newPass.setBackground((Color.WHITE));
         newPassA.setBackground(Color.WHITE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        text1 = new javax.swing.JLabel();
        text2 = new javax.swing.JLabel();
        text3 = new javax.swing.JLabel();
        oldPass = new javax.swing.JPasswordField();
        newPass = new javax.swing.JPasswordField();
        newPassA = new javax.swing.JPasswordField();
        change = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        info = new javax.swing.JLabel();
        icon = new javax.swing.JLabel();
        text4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        main.setBackground(new java.awt.Color(255, 255, 255));

        text1.setText("Current Password");

        text2.setText("New Password");

        text3.setText("New Password again");

        oldPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                oldPassKeyPressed(evt);
            }
        });

        newPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPassKeyPressed(evt);
            }
        });

        newPassA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPassAKeyPressed(evt);
            }
        });

        change.setText("Change");
        change.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeMouseClicked(evt);
            }
        });
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/luma/images/logo.png"))); // NOI18N

        text4.setFont(new java.awt.Font("Skia", 0, 14)); // NOI18N
        text4.setText("Change Your Password");

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(mainLayout.createSequentialGroup()
                                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text1)
                                    .addComponent(text2)
                                    .addComponent(text3)
                                    .addGroup(mainLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainLayout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(oldPass)
                                            .addComponent(newPass)
                                            .addComponent(newPassA, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(icon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(text4)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(icon))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(text4)))
                .addGap(45, 45, 45)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text1)
                    .addComponent(oldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text2)
                    .addComponent(newPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text3)
                    .addComponent(newPassA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(info)
                .addGap(37, 37, 37)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit)
                    .addComponent(change))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeActionPerformed

    private void oldPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oldPassKeyPressed
        // TODO add your handling code here:
       SwingUtilities.invokeLater(() -> {
        info.setForeground(Color.red);

        String enteredPass = new String(oldPass.getPassword());

        if (enteredPass.equals(userOldPass)) {
            info.setText("");
        } else {
            info.setText("Old passwords do not match");
        }
    });
    }//GEN-LAST:event_oldPassKeyPressed
    private String nPass = "";
    private void newPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPassKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() > -1){
            String pass = new String(newPass.getPassword());
            pass+=evt.getKeyChar(); //for the right results
            if(ProfileServices.checkPassword(pass)){
                info.setForeground(Color.red);
               if(!new String(oldPass.getPassword()).equals(userOldPass)){
                    info.setText("Old passwords do not match");
                }
                else{
                     info.setText("");
                }
            }
            else if(pass.equals("")){
                if(!new String(oldPass.getPassword()).equals(userOldPass)){
                    info.setText("Old passwords do not match");
                }
                else{
                     info.setText("");
                     change.setVisible(true);
                }
               
                
            }
            else{
            
             info.setForeground(Color.red);
             info.setText("Meet all requirements for a new password");
             
            }
        }
    }//GEN-LAST:event_newPassKeyPressed

    private void newPassAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPassAKeyPressed
        // TODO add your handling code here:
      if(evt.getKeyCode() > -1){
          
        String pass = new String(newPassA.getPassword());
        pass += evt.getKeyChar();
        if(new String(newPass.getPassword()).equals(pass)){
           if(!new String(oldPass.getPassword()).equals(userOldPass)){
                    info.setText("Old passwords do not match");
                }
                else{
                     info.setText("");
                     change.setVisible(true);
                }
        }
        else{
             info.setText("New passwords do not match");
        }  
        
}

    }//GEN-LAST:event_newPassAKeyPressed

    private void changeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeMouseClicked
        // TODO add your handling code here:
        if(userOldPass.equals(new String(oldPass.getPassword()))){
            if(new String(newPass.getPassword()).equals(new String(newPassA.getPassword())) && ProfileServices.checkPassword(new String(newPassA.getPassword()))){
             info.setText("");
                try {
                    DatabaseOperations.updateProfile(profile.getProfile_id(), profile.getProfile_name(), profile.getUsername(), new String(newPass.getPassword()));
                    System.out.println(profile.getProfile_name()+"'s password updated");
                    JOptionPane.showMessageDialog(rootPane, "Your password is updated", "Operation Success",1 );
                    this.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(ChangePassScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                info.setText("Check your new password inputs");
            }
        }
        else{
            info.setText("Check your old password");
        }
    }//GEN-LAST:event_changeMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton change;
    private javax.swing.JButton exit;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel info;
    private javax.swing.JPanel main;
    private javax.swing.JPasswordField newPass;
    private javax.swing.JPasswordField newPassA;
    private javax.swing.JPasswordField oldPass;
    private javax.swing.JLabel text1;
    private javax.swing.JLabel text2;
    private javax.swing.JLabel text3;
    private javax.swing.JLabel text4;
    // End of variables declaration//GEN-END:variables
}
