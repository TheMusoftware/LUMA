/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package luma;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author musoftware
 */
public class basicFileShareScreen extends javax.swing.JFrame {

    /**
     * Creates new form basicFileShareScreen
     */
    boolean isConnected = false;
    boolean isDark;
    void  setApperance(){
        if(!isDark){
            main.setBackground(Color.WHITE);
            isDark = false;
        }
        else{
            main.setBackground(Color.GRAY);
            isDark = true;
        }
    }
    public basicFileShareScreen()  {
        initComponents();
        try{
            ip.setText(Server.getServerIp());
            waitConnectionAnimation();
            setApperance();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
    }
    private void waitConnectionAnimation(){
        Runnable wait = new Runnable(){
            @Override
            public void run(){
                int dot = 0;
                while(!isConnected){
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(basicFileShareScreen.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    switch(dot){
                        case 0:
                            info.setText("Connection Waiting.");
                            break;
                        case 1:
                            info.setText("Connection Waiting..");
                            break;
                        case 2:
                            info.setText("Connection Waiting...");
                            break;
                        case 3:
                            info.setText("Connection Waiting....");
                        default:
                            info.setText("Connection Waiting");
                            break;
                    }
                    dot++;
                    if(dot == 4) dot = 0;
                }
                info.setText("Server connection established");
            }
        };
        Thread th = new Thread(wait);
        th.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        send = new javax.swing.JButton();
        receive = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ip = new javax.swing.JLabel();
        info = new javax.swing.JLabel();
        brand = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        main.setBackground(new java.awt.Color(255, 255, 255));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/luma/images/logo.png"))); // NOI18N

        send.setText("SEND");
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
        });

        receive.setText("RECEIVE");
        receive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                receiveMouseClicked(evt);
            }
        });

        jLabel1.setText("Your Ip Address ");

        info.setText("Connection Waiting...");

        brand.setFont(new java.awt.Font("Skia", 1, 11)); // NOI18N
        brand.setText("THEMUSOFTWARE Â©");

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(send)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(receive)
                        .addGap(71, 71, 71))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(logo))
                            .addGroup(mainLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(28, 28, 28)
                                .addComponent(ip))
                            .addGroup(mainLayout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(info)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(brand)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo)
                .addGap(16, 16, 16)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(ip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(send)
                    .addComponent(receive))
                .addGap(18, 18, 18)
                .addComponent(info)
                .addGap(40, 40, 40)
                .addComponent(brand)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseClicked
        // TODO add your handling code here:
        startServer();
    }//GEN-LAST:event_sendMouseClicked

    private void receiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receiveMouseClicked
        // TODO add your handling code here:
       startClient();
    }//GEN-LAST:event_receiveMouseClicked
    private void startServer(){
        File file;
        bServer bS = new bServer();
        isConnected = bS.connectServer();
        if(isConnected){
            JFileChooser chooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
            chooser.setDialogTitle("Choose the file to upload");
            int returnValue = chooser.showOpenDialog(null);
		if (returnValue == JFileChooser.APPROVE_OPTION) {
			 String path = chooser.getSelectedFile().getPath();
                        System.out.println(path);
                file = new File(path);
                try {
                    bS.sendFile(file);
                } catch (IOException ex) {
                    Logger.getLogger(basicFileShareScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
                else{
                    
                }
    }
    }
    private void startClient(){
        JTextField text = new JTextField();
        text.setText("192.168.1.");
       int action =  JOptionPane.showConfirmDialog(rootPane, text, "Enter Server Ip", JOptionPane.OK_CANCEL_OPTION);
        System.out.println(action);
       if(action == 0){
           bClient bc = new bClient(text.getText());
           isConnected = bc.connectServer();
           if(isConnected){
               try {
                   bc.saveFile();
               } catch (IOException ex) {
                   Logger.getLogger(basicFileShareScreen.class.getName()).log(Level.SEVERE, null, ex);
               }
           }
       }
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(basicFileShareScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(basicFileShareScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(basicFileShareScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(basicFileShareScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new basicFileShareScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel brand;
    private javax.swing.JLabel info;
    private javax.swing.JLabel ip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel main;
    private javax.swing.JButton receive;
    private javax.swing.JButton send;
    // End of variables declaration//GEN-END:variables
}
